name: Build and deploy a container to an Azure Container Instance

env:
  AZURE_CONTAINER_REGISTRY: "danielfastapi"
  RESOURCE_GROUP: "rg-database"
  CONTAINER_INSTANCE_NAME: "podcastgpt"

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

        # Logs in with Azure credentials
      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      # Generating and logging in with a temp token
      - name: Get ACR token
        id: get_acr_token
        run: |
          # Get ACR token
          TOKEN=$(az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}  \
            --expose-token \
            --output tsv \
            --query accessToken)

          # Check if fetch token succeeded
          [[ $? -ne 0 ]] && echo "::error::helm unable to login into registry" && exit 1

          # Expose output to next step
          echo "::set-output name=acr_token::$TOKEN"

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.get_acr_token.outputs.acr_token }}

      - name: Build and push image to ACR
        run: |
          docker buildx build . --push \
          -t ${{env.AZURE_CONTAINER_REGISTRY}}.azurecr.io/pythonapp:latest \
          -f Dockerfile \
          || (echo "::error::Unable to build and push docker image" && exit 1)

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Logs in with Azure credentials
      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      # Generating and logging in with a temp token
      - name: Get ACR token
        id: get_acr_token
        run: |
          # Get ACR token
          TOKEN=$(az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}  \
            --expose-token \
            --output tsv \
            --query accessToken)

          # Check if fetch token succeeded
          [[ $? -ne 0 ]] && echo "::error::helm unable to login into registry" && exit 1

          # Expose output to next step
          echo "::set-output name=acr_token::$TOKEN"

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.get_acr_token.outputs.acr_token }}

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          dns-name-label: podcastgpt
          image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/pythonapp:latest
          memory: 11
          registry-username: danielfastapi
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          environment-variables: OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} AZURE_SQL_CONNECTIONSTRING=${{ secrets.AZURE_SQL_CONNECTIONSTRING }} AZURE_BLOB_CONNECTIONSTRING=${{ secrets.AZURE_BLOB_CONNECTIONSTRING }}
          name: ${{ env.CONTAINER_INSTANCE_NAME }}
          location: "Israel Central"
